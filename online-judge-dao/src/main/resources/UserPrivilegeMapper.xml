<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.idealismxxm.onlinejudge.dao.UserPrivilegeDao">
    <!-- UserPrivilege的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_UserPrivilege_Map" type="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
        <result column="deleted_status" jdbcType="TINYINT" property="deletedStatus" />
        <result column="updator" jdbcType="VARCHAR" property="updator" />
        <result column="privilege" jdbcType="INTEGER" property="privilege" />
        <result column="username" jdbcType="VARCHAR" property="username" />
    </resultMap>

    <!-- 数据库中表名为:user_privilege的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="user_privilege_Column">
        user_privilege.id as id
        ,user_privilege.updated_time as updated_time
        ,user_privilege.deleted_status as deleted_status
        ,user_privilege.updator as updator
        ,user_privilege.privilege as privilege
        ,user_privilege.username as username
    </sql>

    <!--获得类名为:UserPrivilege对应的数据库表的数据总行数 -->
    <select id="getUserPrivilegeRowCount" resultType="java.lang.Long">
        select count(id) from user_privilege
    </select>
    <!-- 获得类名为:UserPrivilege对应数据库中表的数据集合 -->
    <select id="selectUserPrivilege" resultMap="result_UserPrivilege_Map">
        select 
        <include refid="user_privilege_Column" /> 
        from user_privilege
    </select> 

    <!-- 获得一个UserPrivilege对象,以参数UserPrivilege对象中不为空的属性作为条件进行查询-->
    <select id="selectUserPrivilegeByObj" parameterType="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege" resultMap="result_UserPrivilege_Map">
        select 
            <include refid="user_privilege_Column" /> 
        from user_privilege
        <where>
            <if test="username != null "> and user_privilege.username = #{username,jdbcType=VARCHAR}</if>
            <if test="privilege != null "> and user_privilege.privilege = #{privilege,jdbcType=INTEGER}</if>
            <if test="updator != null "> and user_privilege.updator = #{updator,jdbcType=VARCHAR}</if>
            <if test="deletedStatus != null "> and user_privilege.deleted_status = #{deletedStatus,jdbcType=TINYINT}</if>
            <if test="updatedTime != null "> and user_privilege.updated_time = #{updatedTime,jdbcType=DATE}</if>
            <if test="id != null "> and user_privilege.id = #{id,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过UserPrivilege的id获得对应数据库中表的数据对象-->
    <select id="selectUserPrivilegeById" parameterType="java.lang.Integer" resultMap="result_UserPrivilege_Map">
        select 
            <include refid="user_privilege_Column" /> 
        from user_privilege
        where user_privilege.id = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将UserPrivilege插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertUserPrivilege" useGeneratedKeys="true" keyProperty="id" parameterType="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege">
        insert into user_privilege(id,updated_time,deleted_status,updator,privilege,username) 
        values(#{id,jdbcType=INTEGER},now(),#{deletedStatus,jdbcType=TINYINT},#{updator,jdbcType=VARCHAR},#{privilege,jdbcType=INTEGER},#{username,jdbcType=VARCHAR})
    </insert>

    <!-- 将UserPrivilege中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyUserPrivilege" useGeneratedKeys="true" keyProperty="id" parameterType="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege">
        insert into user_privilege
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            updated_time,
            <if test="deletedStatus != null">deleted_status,</if>
            <if test="updator != null">updator,</if>
            <if test="privilege != null">privilege,</if>
            <if test="username != null">username,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id,jdbcType=INTEGER},</if>
            now(),
            <if test="deletedStatus != null"> #{deletedStatus,jdbcType=TINYINT},</if>
            <if test="updator != null"> #{updator,jdbcType=VARCHAR},</if>
            <if test="privilege != null"> #{privilege,jdbcType=INTEGER},</if>
            <if test="username != null"> #{username,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <!-- 将UserPrivilege批量插入到对应数据库的表中-->
    <insert id="insertUserPrivilegeByBatch" parameterType="ArrayList">
        insert into user_privilege(id,updated_time,deleted_status,updator,privilege,username) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id,jdbcType=INTEGER},now(),#{item.deletedStatus,jdbcType=TINYINT},#{item.updator,jdbcType=VARCHAR},#{item.privilege,jdbcType=INTEGER},#{item.username,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!-- 通过UserPrivilege的id将数据库表中对应的数据删除-->
    <delete id="deleteUserPrivilegeById" parameterType="java.lang.Integer">
        delete from user_privilege
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过UserPrivilege的id将UserPrivilege的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateUserPrivilegeById" parameterType="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege">
        update user_privilege set
            updated_time=now()
            ,deleted_status=#{deletedStatus,jdbcType=TINYINT}
            ,updator=#{updator,jdbcType=VARCHAR}
            ,privilege=#{privilege,jdbcType=INTEGER}
            ,username=#{username,jdbcType=VARCHAR}
        where id=#{id,jdbcType=INTEGER}
    </update>

    <!-- 通过UserPrivilege的id将UserPrivilege中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyUserPrivilegeById" parameterType="cn.idealismxxm.onlinejudge.domain.entity.UserPrivilege">
        update user_privilege
        <set>
            updated_time=now(),
            <if test="deletedStatus != null">
                deleted_status=#{deletedStatus,jdbcType=TINYINT},
            </if>
            <if test="updator != null">
                updator=#{updator,jdbcType=VARCHAR},
            </if>
            <if test="privilege != null">
                privilege=#{privilege,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username=#{username,jdbcType=VARCHAR},
            </if>
        </set>
        where id=#{id,jdbcType=INTEGER}
    </update>

    <!-- 根据 username 和 privilege 获取用户权限实例（可以是逻辑删除的） -->
    <select id="getUserPrivilegeByUsernameAndPrivilege" resultMap="result_UserPrivilege_Map">
        SELECT
            <include refid="user_privilege_Column" />
        FROM user_privilege
        WHERE privilege = #{privilege, jdbcType = INTEGER}
            AND username = #{username, jdbcType = VARCHAR}
    </select>

    <!-- 获取 username 的用户权限列表（包含逻辑删除的） -->
    <select id="listUserPrivilegeByUsername" resultMap="result_UserPrivilege_Map">
        SELECT
        <include refid="user_privilege_Column" />
        FROM user_privilege
        WHERE username = #{username, jdbcType = VARCHAR}
    </select>
</mapper>